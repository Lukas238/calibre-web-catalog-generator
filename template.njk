<!DOCTYPE html>
<html>

    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8">

        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%2210 0 100 100%22><text y=%22.90em%22 font-size=%2290%22>ðŸ“š</text></svg>"></link>


        <title>{{catalogTitle}}
            | Catalog</title>

        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.13.1/font/bootstrap-icons.min.css">

        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
        <style>
            html,
            body {
                margin: 0;
                padding: 0;
                font-weight: lighter;
            }

            body {
                /* min-width: 640px; */
                height: 100%;
                overflow: hidden;
            }

            main {
                overflow-y: auto;
                height: 100vh;
            }

            #controls-area {
                font-size: 0.8em;

                button {
                    padding: 0 0.2em !important;
                }


                #sort-box {
                    .btn-sort {
                        padding: 0 0.2em !important;
                        opacity: .5;

                        &:after {
                            content: '';
                            vertical-align: middle;
                            display: inline-block;
                            height: 17px;
                            width: 10px;
                            line-height: 1em;
                        }

                        &:after {
                            content: "\F124";
                            font-family: "bootstrap-icons";
                        }

                        &.desc:after {
                            content: "\F145";
                            font-family: "bootstrap-icons";
                        }

                        &.asc,
                        &.desc {
                            opacity: 1;

                            &:after {
                                display: inline-block;
                            }
                        }
                    }

                }

                .form-switch input {
                    cursor: pointer;
                }
            }

            body[data-bs-theme="dark"] {
                #controls-area {
                    #sort-box {
                        .btn-sort:after {
                            filter: invert(1);
                        }
                    }
                }
            }

            #books-list {
                /* gap: 0.8em; */

                &.-view-list {

                    #table-header {
                        display: block !important;
                        width: 100%;
                    }


                    #table-header,
                    .book {
                        display: block;
                        width: 100% !important;
                        padding: 0 !important;

                        td {
                            vertical-align: middle;
                        }

                        .col-cover {
                            cursor: pointer;
                            width: 80px;;
                            img {
                                object-fit: cover;
                                height: 120px;
                                max-width: 80px;
                            }
                        }

                        .col-title {
                            min-width: 320px;
                        }

                        .col-authors {
                            width: 320px;
                            min-width: 320px;
                        }

                        .col-added-on {
                            width: 120px;
                        }
                    }

                    .book {
                        margin: 0 !important;

                        width: 33%;
                        /* padding: 1em !important; */

                        header {
                            display: none;
                        }

                        .book__table {
                            display: block !important;
                            margin-top: -1px;
                        }
                    }
                }
            }

            .book {
                display: inline-block;
                width: 33%;
                padding: 0.8em;

                header {
                    cursor: pointer;

                    img {
                        /* min-width: 200px;
                        max-width: 200px;
                        min-height: 300px;
                        max-height: 300px; */
                        max-width: 100%;
                    }
                }

                .book__body {
                    display: none;
                }
            }

            .book__body .book__meta {
                font-size: 0.8em;

                label {
                    font-style: italic;
                    font-size: 0.8em;
                }
            }

            #book-preview {
                display: flex;
                width: 100%;
                height: 100svh;
                position: absolute;
                top: 0;
                right: 0;

                &:not(.show) {
                    display: none !important;
                }


                .book-preview__content {
                    height: calc(100% - 52px);
                    overflow-y: auto;

                    .book {
                        width: 100%;
                        header {
                            text-align: center;
                            margin: 0 auto;
                            cursor: default;

                            img {
                                max-width: 300px;
                                max-height: 400px;
                            }
                        }

                        .book__body {
                            display: block;
                        }
                    }
                }
            }

            @media screen and (min-width: 768px) {
                #books-list .book {
                    width: 200px;
                }

                #book-preview {
                    --book-preview-width: 450px;
                    width: var(--book-preview-width);
                    right: 0;
                    transition: right .5s ease;

                    &:not(.show){
                        right: calc(var(--book-preview-width) * -1);
                    }
                }

            }


            body.-show-books-formats .book-formats {
                display: block !important;
            }

            .rating{
              &.-rating-1:before,
              &.-rating-2:before,
              &.-rating-3:before,
              &.-rating-4:before,
              &.-rating-5:before{
                font-family: "bootstrap-icons";
              }
              &.-rating-1:before{
                content: "\F586\F588\F588\F588\F588";
              }
              &.-rating-2:before{
                content: "\F586\F586\F588\F588\F588";
              }
              &.-rating-3:before{
                content: "\F586\F586\F586\F588\F588";
              }
              &.-rating-4:before{
                content: "\F586\F586\F586\F586\F588";
              }
              &.-rating-5:before{
                content: "\F586\F586\F586\F586\F586";
              }
            }
        </style>
    </head>

    <body class="container-xxl py-3">

            <main class="">
                <h1>{{catalogTitle}}</h1>

                <div id="search-box" class="py-1">
                    <input class="form-control border" placeholder="Search by title or author">
                </div>
                <div id="controls-area" class="d-flex me-3 py-1">
                    <div id="sort-box" class="d-inline-block">
                        <label title="Sort by:">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filter" viewbox="0 0 16 16">
                                <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5"/>
                            </svg>
                            <strong class="d-none">Sort by:</strong>
                        </label>


                        <button id="sort-title" type="button" class="p-1 btn btn-sm btn-sort" title="Sort by Title"><span class="d-none d-sm-inline">Title</span></button>,
                        <button id="sort-author" type="button" class="p-1 btn btn-sm btn-sort" title="Sort by Author"><span class="d-none d-sm-inline">Author</span></button>,
                        <button id="sort-id" type="button" class="desc p-1 btn btn-sm btn-sort" title="Sort by Date"><span class="d-none d-sm-inline">Date</span></button>
                    </div>

                    <div class="border-start ms-2 ps-2 flex-grow-1">
                        <button id="sort-reset" type="button" class="text-end btn btn-sm btn-reset" title="Clean all filter">
                            <i class="bi bi-x"></i>
                            <span class="d-none d-sm-inline">Reset Filters</span>
                        </button>
                    </div>

                    <div class="view-qr ms-2 border-start ps-2 ">
                        <button type="button" class="btn btn-sm" data-bs-toggle="modal" data-bs-target="#qr-modal" title="View catalog QR code">
                            <i class="bi bi-qr-code"></i>
                        </button>
                    </div>

                    <div id="views-box" class="ms-2 border-start ps-2 nav-item align-items-center d-flex">
                        <label>
                            <strong class="d-none">View:</strong>
                        </label>
                        <i class="bi bi-grid"></i>
                        <div class="ms-2 form-switch">
                            <input class="form-check-input" type="checkbox" role="switch" id="layoutSwitcher" title="Layout switcher"/>
                        </div>
                        <i class="bi bi-list"></i>
                    </div>

                    <div class="ms-2 border-start ps-2 nav-item align-items-center d-flex">
                        <label>
                            <strong class="d-none">Theme:</strong>
                        </label>
                        <i class="bi bi-brightness-high"></i>
                        <!-- Default switch -->
                        <div class="ms-2 form-switch">
                            <input class="form-check-input" type="checkbox" role="switch" id="themingSwitcher" title="Theme switcher"/>
                        </div>
                        <i class="bi bi-moon"></i>
                    </div>

                </div>

                <section id="books-list" class="d-flex align-content-end flex-wrap m-0 pt-2">

                    <table id="table-header" class="table table-sm d-none m-0">
                        <thead class="d-block">
                            <tr class="d-flex">
                                <th class="col-cover"></th>
                                <th class="col-title flex-grow-1">Title</th>
                                <th class="col-authors">Authors</th>
                                <th class="col-added-on">Added on</th>
                            </tr>
                        </thead>
                    </table>

                    {% for book in books %}
                        <article id="book-{{book.id}}" class="book " title="{{book.title}}" data-id="{{ book.id }}" data-authors="{{ book.authors | replace(',', ', ') }}" data-title="{{ book.title }}" data-index="{{loop.index}}">
                            <header title="{{book.title}}">
                                <img src="{{ book.cover }}" loading="lazy" alt="{{ book.title }}" class="d-block mx-auto shadow" width="250" height="auto"/>
                            </header>
                            <div class="book__body">
                                <h1 class="h3 text-center my-3 fw-lighter">{{ book.title | safe}}</h1>
                                <ul class="book__meta list-group">
                                    <li class="list-group-item">
                                        <label>Authors:</label>
                                        <span class="fs-6">{{ book.authors | safe }}</span>
                                    </li>
                                    {% if book.isbn %}
                                        <li class="list-group-item">
                                            <label>ISBN:</label>
                                            <a href="https://www.goodreads.com/search?q={{ book.isbn }}" target="_blank">{{ book.isbn }}</a>
                                        </li>
                                    {% endif %}
                                    {% if book.series %}
                                        <li class="list-group-item">
                                            <label>Series:</label>
                                            <span class="fs-6">{{ book.series | safe }}</span> -
                                            <span class="text-muted">Book #{{ book.series_index }}</span>
                                        </li>
                                    {% endif %}
                                    {% if book.rating %}
                                        <li class="list-group-item">
                                            <label>Rating:</label>
                                            <span class="fs-6 rating -rating-{{ book.rating | safe }} text-warning" title="{{ book.rating | safe }}"><span class="visually-hidden">{{ book.rating | safe }}</span></span>
                                        </li>
                                    {% endif %}
                                    <li class="list-group-item">
                                        <label>Added On:</label>
                                        {{ book.added_date }}
                                    </li>
                                    <li class="list-group-item">
                                        <label>Read:</label>
                                        {% if book.read %}
                                            <i class="bi bi-check-lg text-success" title="Read"></i>
                                        {% else %}
                                            <i class="bi bi-x-lg text-danger" title="Not Read"></i>
                                        {% endif %}
                                    </li>
                                </ul>
                                <div class="text-center m-3">

                                    {% if book.formats %}
                                        <div class="book-formats row justify-content-center mb-2 d-none">
                                            {% for format in book.formats %}
                                                <a class="btn btn-primary text-nowrap col-auto m-1" href="https://drive.google.com/uc?export=download&id={{ format.id }}" target="_blank">
                                                    {{format.type | upper}}
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-download" viewbox="0 0 16 16">
                                                        <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5"/>
                                                        <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z"/>
                                                    </svg>
                                                </a>
                                            {% endfor %}
                                        </div>
                                    {% endif %}

                                    <div>
                                        <small>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat-left-dots" viewbox="0 0 16 16">
                                                <path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z"/>
                                                <path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0m4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>
                                            </svg>
                                            <a href="https://www.goodreads.com/search?q={{ (book.title + ', ' + (book.authors | replace(',', ', ')) ) | urlencode | replace('%20', '+')}}&search_type=books" target="_blank">Search on Goodreads</a>
                                        </small>
                                    </div>

                                </div>
                                {% if book.summary %}
                                    <div class="book_description border-top pt-3 ">
                                        <h2 class="h4 d-none">Summary:</h2>
                                        {{ book.summary | safe }}
                                    </div>
                                {% endif %}
                            </div>
                            <div class="book__table d-none border-bottom">
                                <table class="table table-sm m-0">
                                    <tbody>
                                        <tr>
                                            <td class="col-cover"><img src="{{ book.cover }}" alt="{{ book.title }}" class="d-block mx-auto shadow"/></td>
                                            <td class="col-title">{{book.title | safe }}</td>
                                            <td class="col-authors">{{book.authors | safe }}</td>
                                            <td class="col-added-on">{{book.added_date}}</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </article>
                    {% endfor %}
                </section>

            </main>

            <aside id="book-preview" class="container-xxl bg-light-subtle shadow-lg d-flex flex-column">
                <header class="visually-hidden">
                    <h2 class="h4 py-2">Book preview</h2>
                </header>
                <div class="book-preview__content"></div>
                <footer class="py-2 border-top mt-3 d-flex justify-content-between">
                    <button id="loadPrevBook" class="btn btn-light"><i class="bi bi-chevron-left"></i><span class="visually-hidden">Previous book</span></button>

                    <button type="button" class="btn btn-secondary"  data-bs-toggle="collapse" data-bs-target="#book-preview">Close Preview</button>

                    <button id="loadNextBook" class="btn btn-light"><i class="bi bi-chevron-right"></i><span class="visually-hidden">Next book</span></button>
                </footer>
            </aside>




        <div id="qr-modal" class="modal" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="h4">Catalog QR code link</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body text-center">
                        <div id="qr-code" class="p-3 bg-white d-inline-block"></div>
                        <p>Share this QR code to acess
                            <br/><strong>{{catalogTitle | safe}}</strong>
                            at:
                            <br/>
                            <a id="qr-catalog-url" href="" target="_blank"></a>
                        </p>
                    </div>
                </div>
            </div>
        </div>


        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/konami-code-js@0.8.3/src/konami-code.min.js"></script>

        <script>
            const books = document.querySelectorAll( '.book' );
            const bookPreview = document.querySelector( '#book-preview' );
            const bookPreviewConten = document.querySelector( '#book-preview .book-preview__content ' );

            books.forEach( book => {
                book.addEventListener( 'click', () => {
                    bookPreview.classList.add( 'show' );
                    const bookClone = book.cloneNode( true );

                    bookPreviewConten.innerHTML = '';
                    bookPreviewConten.appendChild( bookClone );

                    // Also scroll to the top of the preview content after the book is loaded
                    bookPreviewConten.scrollTo( { top: 0, behavior: 'smooth' } );

                } );
            } );

            // Add prev and next book navigation buttons to the preview pane
            document.querySelector( '#loadPrevBook' ).addEventListener( 'click', () => {
                const currentBookId = bookPreviewConten.querySelector( '.book' ).getAttribute( 'data-id' );
                const currentBookIndex = Array.from( books ).findIndex( book => book.getAttribute( 'data-id' ) === currentBookId );
                const prevBookIndex = ( currentBookIndex - 1 + books.length ) % books.length;

                // Check if the previous book is visible (not filtered out), if not, keep looking back
                let foundVisible = false;
                let searchIndex = prevBookIndex;
                while ( ! foundVisible ) {
                    if ( books[ searchIndex ].style.display !== 'none' ) {
                        foundVisible = true;
                        books[ searchIndex ].click();
                    } else {
                        searchIndex = ( searchIndex - 1 + books.length ) % books.length;
                        if ( searchIndex === currentBookIndex ) {
                            // We've looped through all books and found none visible
                            break;
                        }
                    }
                }


            } );
            document.querySelector( '#loadNextBook' ).addEventListener( 'click', () => {
                const currentBookId = bookPreviewConten.querySelector( '.book' ).getAttribute( 'data-id' );
                const currentBookIndex = Array.from( books ).findIndex( book => book.getAttribute( 'data-id' ) === currentBookId );
                const nextBookIndex = ( currentBookIndex + 1 ) % books.length;
                // Check if the next book is visible (not filtered out), if not, keep looking forward

                let foundVisible = false;
                let searchIndex = nextBookIndex;

                while ( ! foundVisible ) {

                    if ( books[ searchIndex ].style.display !== 'none' ) {
                        foundVisible = true;
                        books[ searchIndex ].click();
                    } else {
                        searchIndex = ( searchIndex + 1 ) % books.length;
                        if ( searchIndex === currentBookIndex ) {
                            // We've looped through all books and found none visible
                            break;
                        }
                    }
                }


            } );



// Sort books by article data attributes, asc or desc
            function sortBooks( sortBy = 'title', order = 'desc' ) {
                const booksList = document.querySelector( '#books-list' );
                const books = Array.from( booksList.querySelectorAll( '.book' ) );

                books.sort( ( a, b ) => {
                    const aData = a.getAttribute( `data-${ sortBy }` );
                    const bData = b.getAttribute( `data-${ sortBy }` );

// For number based comparison
                    if ( sortBy === 'id' ) {
                        return order === 'asc' ? aData - bData : bData - aData;
                    }

// For text based comparison
                    return order === 'asc' ? aData.localeCompare( bData ) : bData.localeCompare( aData );
                } );

                books.forEach( book => booksList.appendChild( book ) );
            }

/**
                         *  Sort Controls
                         * ****************************
                         */
// Sort by title
            const btn_sort_title = document.querySelector( '#sort-title' );
            btn_sort_title.addEventListener( 'click', ( e ) => { // Remove other sort buttons from the class
                btn_sort_author.classList.remove( 'desc', 'asc' );
                btn_sort_id.classList.remove( 'desc', 'asc' );

                if ( ! btn_sort_title.classList.contains( 'desc' ) && ! btn_sort_title.classList.contains( 'asc' ) ) {
                    btn_sort_title.classList.add( 'asc' ); // Default
                } else {
                    btn_sort_title.classList.toggle( 'desc' );
                    btn_sort_title.classList.toggle( 'asc' );
                } sortBooks( 'title', btn_sort_title.classList.contains( 'desc' ) ? 'desc' : 'asc' );
            } );

// Sort by Autors
            const btn_sort_author = document.querySelector( '#sort-author' );
            btn_sort_author.addEventListener( 'click', ( e ) => { // Remove other sort buttons from the class
                btn_sort_title.classList.remove( 'desc', 'asc' );
                btn_sort_id.classList.remove( 'desc', 'asc' );
                if ( ! btn_sort_author.classList.contains( 'desc' ) && ! btn_sort_author.classList.contains( 'asc' ) ) {
                    btn_sort_author.classList.add( 'asc' ); // Default
                } else {
                    btn_sort_author.classList.toggle( 'desc' );
                    btn_sort_author.classList.toggle( 'asc' );
                } sortBooks( 'authors', btn_sort_author.classList.contains( 'desc' ) ? 'desc' : 'asc' );
            } );

// Sort by date
            const btn_sort_id = document.querySelector( '#sort-id' );
            btn_sort_id.addEventListener( 'click', ( e ) => { // Remove other sort buttons from the class
                btn_sort_title.classList.remove( 'desc', 'asc' );
                btn_sort_author.classList.remove( 'desc', 'asc' );

                if ( ! btn_sort_id.classList.contains( 'desc' ) && ! btn_sort_id.classList.contains( 'asc' ) ) {
                    btn_sort_id.classList.add( 'desc' ); // Add desc by default
                } else {
                    btn_sort_id.classList.toggle( 'desc' );
                    btn_sort_id.classList.toggle( 'asc' );
                } sortBooks( 'id', btn_sort_id.classList.contains( 'desc' ) ? 'desc' : 'asc' );
            } );

// Reset search and sort settings
            document.querySelector( '#sort-reset' ).addEventListener( 'click', ( e ) => { // Clear the serch box too
                document.querySelector( '#search-box input' ).value = '';

// And restore the inline-block to all books
                books.forEach( book => book.style.display = 'inline-block' );

// Reset the sort to default
                btn_sort_id.classList.remove( 'desc', 'asc' );
                btn_sort_id.click();
            } );


/**
                         *  Search box
                         * ****************************
                         */
            const searchBox = document.querySelector( '#search-box input' );
            searchBox.addEventListener( 'input', ( e ) => {
                const searchValue = e.target.value.trim().toLowerCase();
                books.forEach( book => {
                    const title = book.getAttribute( 'data-title' ).toLowerCase();
                    const authors = book.getAttribute( 'data-authors' ).toLowerCase();
                    if ( title.includes( searchValue ) || authors.includes( searchValue ) ) {
                        book.style.display = 'inline-block';
                    } else {
                        book.style.display = 'none';
                    }
                } );
            } );

/**
                         *  Views Controls
                         * ****************************
                         */
            function updateLayout() {
                document.querySelector( '#books-list' ).classList.toggle( '-view-list', document.querySelector( '#layoutSwitcher' ).checked );

                // Save the layout preference in a browser cookie that never expires
                document.cookie = `layout=${document.querySelector( '#layoutSwitcher' ).checked ? 'list' : 'grid'}; path=/; max-age=31536000`; // 1 year
            }
            document.querySelector( '#layoutSwitcher' ).addEventListener( 'click', () => {
                updateLayout();
            } );

            function loadLayoutFromCookie() {
                const layoutCookie = document.cookie.split( '; ' ).find( row => row.startsWith( 'layout=' ) );
                if ( layoutCookie ) {
                    document.querySelector( '#layoutSwitcher' ).checked = layoutCookie.split( '=' )[ 1 ] === 'list';
                    updateLayout();
                }
            }

/**
                         *  Theme selector Control
                         * ****************************
                         */
            function updateTheme() {
                document.body.setAttribute( 'data-bs-theme', document.querySelector( '#themingSwitcher' ).checked ? 'dark' : 'light' );
                // Save the theme preference in a browser cookie that never expires
                document.cookie = `theme=${document.querySelector( '#themingSwitcher' ).checked ? 'dark' : 'light'}; path=/; max-age=31536000`; // 1 year
            }
            document.querySelector( '#themingSwitcher' ).addEventListener( 'click', () => {
                updateTheme();
            } );

            function loadThemeFromCookie() {
                const themeCookie = document.cookie.split( '; ' ).find( row => row.startsWith( 'theme=' ) );
                if ( themeCookie ) {
                    document.querySelector( '#themingSwitcher' ).checked = themeCookie.split( '=' )[ 1 ] === 'dark';
                    updateTheme();
                }
            }


/**
                         *  QR code generator
                         * ****************************
                         */
            function updateQRLink() { // Get the current page URL and generate a QR code for it
                var catalog_url = window.location.href;
                catalog_url = catalog_url.replace( /\/[^\/]+$/, '' );

// Update the text link
                document.querySelector( '#qr-catalog-url' ).textContent = catalog_url;
                document.querySelector( '#qr-catalog-url' ).href = catalog_url;

//Update the QR code image
                const qrCode = new QRCode( 'qr-code', catalog_url );
            }

            function generateQRCode() {
                const catalog_url = document.querySelector( '#qr-catalog-url' ).href;
                const qrCode = new QRCode( 'qr-code', catalog_url );
            }

// Initialize the page view
            function init() {
                loadThemeFromCookie();
                loadLayoutFromCookie();

                updateQRLink();

                new KonamiCode( {
                    callback: function ( konamiCode ) {
                        konamiCode.disable();
                        document.querySelector( 'body' ).classList.add( '-show-books-formats' );
                    }
                } );

// If the URL include a query paramter ?download=1 or true, then add the class to show the formats
                const urlParams = new URLSearchParams( window.location.search );
                if ( urlParams.get( 'download' ) === '1' || urlParams.get( 'download' ) === 'true' ) {
                    document.querySelector( 'body' ).classList.add( '-show-books-formats' );
                }

            }

            init();
        </script>
    </body>
</html>
